Shader "Custom/Unlit/#SCRIPTNAME#" {
	Properties {
	}
	SubShader {
		Tags { "RenderType"="Opaque" }
		LOD 100

		Pass {
			CGPROGRAM
			#pragma target 5.0
			#pragma vertex VS
			#pragma fragment FS
			
			#include "UnityCG.cginc"

      struct VS_OUT {
        float4 vertex : SV_Position;
        float4 texcoord : TEXCOORD0;
      };

			VS_OUT VS(appdata_full v) {
				VS_OUT o = (VS_OUT) 0;
				o.vertex = UnityObjectToClipPos(v.vertex);
				o.texcoord = v.texcoord;
				return o;
			}

      float random(float2 st) {
        return frac(sin(dot(st.xy, float2(12.9898, 78.233))) * 
                          43758.5453123);
			}

      float mod(float x, float y) {
        return x - y * floor(x/y);
      }

			#define rot(a) float2x2(cos(a), sin(a), -sin(a), cos(a))

			#define PI acos(-1.)

			float4 FS(VS_OUT input) : SV_Target {
				float2 uv = input.texcoord.xy;
				return float4(uv, 0, 1);
			}
			ENDCG
		}
	}
}
